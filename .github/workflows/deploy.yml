name: Deploy frontend to VPS

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      # Build-time env
      NEXT_PUBLIC_WOOCOMMERCE_URL: ${{ secrets.NEXT_PUBLIC_WOOCOMMERCE_URL }}
      NEXT_PUBLIC_WOOCOMMERCE_CONSUMER_KEY: ${{ secrets.NEXT_PUBLIC_WOOCOMMERCE_CONSUMER_KEY }}
      NEXT_PUBLIC_WOOCOMMERCE_CONSUMER_SECRET: ${{ secrets.NEXT_PUBLIC_WOOCOMMERCE_CONSUMER_SECRET }}

      # Deploy connection
      SERVER_HOST: ${{ secrets.SERVER_HOST }}
      SERVER_USER: ${{ secrets.SERVER_USER }}
      SERVER_PORT: ${{ secrets.SERVER_PORT }}
      TARGET_DIR: ${{ secrets.TARGET_DIR }} # e.g. /var/www/ultrastore-frontend
      SERVICE_NAME: ${{ secrets.SERVICE_NAME }} # e.g. ultrastore-frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: pnpm

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Build
        run: pnpm build

      - name: Prepare artifact (Next.js standalone)
        run: |
          rm -rf deploy
          mkdir -p deploy/.next
          cp -r .next/standalone deploy/.next/standalone
          cp -r .next/static deploy/.next/static
          cp -r public deploy/public

      - name: Setup SSH
        run: |
          install -m 700 -d ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ssh-keyscan -p "${SERVER_PORT:-22}" "${SERVER_HOST}" >> ~/.ssh/known_hosts

      - name: Upload release
        run: |
          RELEASE="release_$(date +%Y%m%d_%H%M%S)"
          echo "RELEASE=${RELEASE}" >> $GITHUB_ENV
          ssh -p "${SERVER_PORT:-22}" -i ~/.ssh/id_ed25519 "${SERVER_USER}@${SERVER_HOST}" "mkdir -p ${TARGET_DIR}/releases/${RELEASE}"
          rsync -az --delete -e "ssh -p ${SERVER_PORT:-22} -i ~/.ssh/id_ed25519" deploy/ "${SERVER_USER}@${SERVER_HOST}:${TARGET_DIR}/releases/${RELEASE}/"

      - name: Activate release and restart service
        run: |
          ssh -p "${SERVER_PORT:-22}" -i ~/.ssh/id_ed25519 "${SERVER_USER}@${SERVER_HOST}" "\
            ln -sfn ${TARGET_DIR}/releases/${RELEASE} ${TARGET_DIR}/current && \
            sudo systemctl daemon-reload && \
            sudo systemctl restart ${SERVICE_NAME} && \
            sudo systemctl status ${SERVICE_NAME} --no-pager -l | tail -n 50 \
          "


